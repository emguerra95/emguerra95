
--Step 1 - Módulo Ingresos

CREATE OR REPLACE TEMP TABLE BASE_KYC_CARLOANS_01 AS
  (SELECT 
      B.KYC_IDENTIFICATION_NUMBER AS CPF_ID,
      B.KYC_IDENTIFICATION_TYPE,
      B.KYC_ENTITY_TYPE,
      B.KYC_LEVEL,
      B.KYC_PER_ADDRESS_STATE_CODE,         
      A.CUS_CUST_ID_BORROWER AS CUS_CUST_ID,
      A.CREATION_DATE_DT,
      A.CRD_MODEL,
      C.RATING_CHARACTER_OM,
      C.INTERNAL_RATING_CHARACTER_OM,
      CURRENT_DATE AS FECHA_SNAPSHOT,
      A.SIT_SITE_ID,       
 
   FROM `meli-bi-data.WHOWNER.LK_KYC_VAULT_USER` B
   LEFT JOIN `meli-bi-data.WHOWNER.BT_CRD_CREDITS_RISK_SCORING` A ON A.CUS_CUST_ID_BORROWER = B.CUS_CUST_ID
   LEFT JOIN `meli-bi-data.SBOX_IT_CREDITS_CREDITSTBL.CC_FRIDAY_SCORING`C ON A.CUS_CUST_ID_BORROWER = C.CUS_CUST_ID
  
   WHERE B.KYC_IDENTIFICATION_NUMBER IS NOT NULL AND A.SIT_SITE_ID = 'MLB'
         AND (A.CRD_MODEL IN ('consumers_character_open_market', 'consumers_character_thick', 'consumers_character_thin')
         AND A.CREATION_DATE_DT > CURRENT_DATE() - 35)
   QUALIFY ROW_NUMBER() OVER(PARTITION BY A.CUS_CUST_ID_BORROWER ORDER BY A.CREATION_DATE_DT DESC) = 1 
  )
;


CREATE OR REPLACE TEMP TABLE BUREAU AS
  (SELECT 
      A.*,
      B.RENDA_PRESUMIDA AS RENDA_NEGATIVA,
      B.RENDA_POSITIVA AS RENDA_POSITIVA,
      B.SCORE_POSITIVO_PF,
      B.TIM_DAY AS TIM_DAY,
      C.RENDA AS RENDA_SERASA,
      D.SCORE AS SCORE_SERASA
  FROM  BASE_KYC_CARLOANS_01 A 
  LEFT JOIN (SELECT * FROM `meli-bi-data.WHOWNER.BT_REGULATIONS_BUREAU` WHERE SIT_SITE_ID='MLB') B  
  ON SAFE_CAST(B.IDENTIFICATION_NUMBER AS NUMERIC) = SAFE_CAST(A.CPF_ID AS NUMERIC) AND CURRENT_DATE >= B.TIM_DAY
  LEFT JOIN `meli-bi-data.SBOX_CREDITSTC.HRP2` C
  ON CAST(A.CPF_ID AS NUMERIC)=C.CPF
  LEFT JOIN `meli-bi-data.SBOX_CREDITSTC.HVAR` D
  ON CAST(A.CPF_ID AS NUMERIC)=D.CPF
  WHERE B.IDENTIFICATION_NUMBER IS NOT NULL AND SCORE_POSITIVO_PF IS NOT NULL
  AND DATE_DIFF(CAST(TIM_DAY as DATE),CAST(CURRENT_DATE as DATE),MONTH) BETWEEN -3 AND 0 
  QUALIFY ROW_NUMBER() OVER(PARTITION BY A.CUS_CUST_ID ORDER BY B.TIM_DAY DESC) = 1 )
;


CREATE OR REPLACE TEMP TABLE BOAVISTA_NEGATIVO AS
  (SELECT 
      A.*,
      B.SCORE_63_PF AS SCORE_NEGATIVO,
      B.TIM_DAY AS TIM_DAY_POSITIVO,
  FROM  BUREAU A 
  LEFT JOIN (SELECT * FROM `meli-bi-data.WHOWNER.BT_REGULATIONS_BUREAU` WHERE SIT_SITE_ID='MLB') B 
  ON SAFE_CAST(B.IDENTIFICATION_NUMBER AS NUMERIC) = SAFE_CAST(A.CPF_ID AS NUMERIC) AND CURRENT_DATE >= B.TIM_DAY
  WHERE B.IDENTIFICATION_NUMBER IS NOT NULL AND SCORE_63_PF IS NOT NULL
  AND DATE_DIFF(CAST(B.TIM_DAY as DATE),CAST(CURRENT_DATE as DATE),MONTH) BETWEEN -6 AND 0 
  QUALIFY ROW_NUMBER() OVER(PARTITION BY A.CUS_CUST_ID ORDER BY B.TIM_DAY DESC) = 1 )
;


-- TRAIGO INFO SCR PARA ARMAR LÓGICA DE INGRESOS
CREATE OR REPLACE TEMP TABLE SCR_FEATURES_01 AS
  (SELECT 
    A.*,
    CASE WHEN REG_QTDEINSTITUICOES>0 THEN ((
      REG_LIMITESDECREDITO+
      REG_VENCIDO0204+REG_VENCIDO0210+REG_VENCIDO0218+REG_VENCIDO0303+REG_VENCIDO0406+REG_VENCIDO1304+
      REG_AVENCER0204+REG_AVENCER0210+REG_AVENCER0218+REG_AVENCER0303+REG_AVENCER0406+REG_AVENCER1304)
      /REG_QTDEINSTITUICOES)
    ELSE 0 END AS LIMITE_TC_INFERIDO,
    CONCAT(REG_DATA_BASE, '-' , '01') AS REG_DATA_BASE_FIX,
    DATE_DIFF(CAST(CONCAT(REG_DATA_BASE, '-' , '01') as DATE),CAST(FECHA_SNAPSHOT as DATE),MONTH) AS DIF_FECHA,
    CASE WHEN B.REG_IDENTIFICATION_TYPE IS NOT NULL THEN 1 ELSE 0 END AS FLAG_SCR
  FROM BOAVISTA_NEGATIVO A LEFT JOIN `meli-bi-data.WHOWNER.BT_REG_MONEY_PLUS` B
  ON A.KYC_IDENTIFICATION_TYPE=B.REG_IDENTIFICATION_TYPE AND
     A.CPF_ID=B.REG_IDENTIFICATION_NUMBER AND 
     A.SIT_SITE_ID=B.SIT_SITE_ID
  WHERE DATE_DIFF(CAST(CONCAT(REG_DATA_BASE, '-' , '01') as DATE),CAST(FECHA_SNAPSHOT as DATE),MONTH) BETWEEN -3 AND 0
  QUALIFY ROW_NUMBER() OVER (PARTITION BY A.CUS_CUST_ID, A.FECHA_SNAPSHOT ORDER BY REG_DATA_BASE DESC) = 1 ) 
;


CREATE OR REPLACE TEMP TABLE SCR_FEATURES AS
  (SELECT 
    A.*,
    CASE WHEN LIMITE_TC_INFERIDO>0 THEN 1 ELSE 0 END AS TC_MERCADO
  FROM SCR_FEATURES_01 A) 
;


CREATE OR REPLACE TEMP TABLE AUXILIAR_PAYMENTS AS
  (SELECT
    A.CUS_CUST_ID,
    A.SIT_SITE_ID,
    PAY.PAY_PAYMENT_ID,
    CASE WHEN (EXTRACT(MONTH FROM PAY_MOVE_DATE)) IN (10,11,12) THEN CONCAT(EXTRACT(YEAR FROM PAY_MOVE_DATE),
          EXTRACT(MONTH FROM PAY_MOVE_DATE))
    ELSE CONCAT(EXTRACT(YEAR FROM PAY_MOVE_DATE), '0', EXTRACT(MONTH FROM PAY_MOVE_DATE)) END AS PERIODO_CONSUMO,  
    CASE WHEN PAY.PAY_OPE_MLIBRE_FLAG ='Y' THEN (COALESCE(PAY.PAY_TOTAL_PAID_AMT,0)+COALESCE(PAY.PAY_FINANCE_FEE_AMT,0)+COALESCE
    (PAY.PAY_COUPON_AMOUNT_AMT,0)-COALESCE(PAY.PAY_OVER_PAID_AMT,0)) 
    ELSE 0 END AS TPV_ARS_ON,
    CASE WHEN PAY.PAY_OPE_MLIBRE_FLAG <> 'Y' AND COALESCE(PAY.CONCEPT_ID,'N/A') NOT IN ('installment_loan', 'credits') THEN (COALESCE
    (PAY.PAY_TOTAL_PAID_AMT,0)+COALESCE(PAY.PAY_FINANCE_FEE_AMT,0)+COALESCE(PAY.PAY_COUPON_AMOUNT_AMT,0)-COALESCE(PAY.
    PAY_OVER_PAID_AMT, 0)) 
    ELSE 0 END AS TPV_ARS_OFF
  
  FROM `meli-bi-data.WHOWNER.BT_MP_PAY_PAYMENTS` PAY 
  INNER JOIN BASE_KYC_CARLOANS_01 A ON PAY.CUS_CUST_ID_BUY=A.CUS_CUST_ID AND
                                    PAY.PAY_MOVE_DATE >= A.FECHA_SNAPSHOT - INTERVAL '365' DAY AND
                                    PAY.PAY_MOVE_DATE < A.FECHA_SNAPSHOT
  WHERE PAY.PAY_STATUS_ID IN ('approved') AND 
        PAY.PAY_MOVE_DATE >= date'2016-01-01' AND
        PAY.CUS_CUST_ID_sel <> PAY.CUS_CUST_ID_BUY
  )
;


CREATE OR REPLACE TEMP TABLE TPV_MENSUAL AS
  (SELECT
      CUS_CUST_ID,
      PERIODO_CONSUMO,
      SUM(TPV_ARS_ON) AS TPV_MENSUAL_ON,
      SUM(TPV_ARS_OFF) AS TPV_MENSUAL_OFF,
      (SUM(TPV_ARS_ON) + SUM(TPV_ARS_OFF)) AS TPV_MENSUAL_TOTAL,
      ROW_NUMBER() OVER (PARTITION BY CUS_CUST_ID ORDER BY PERIODO_CONSUMO DESC) AS MES_ANTIG
    FROM AUXILIAR_PAYMENTS
    GROUP BY 1,2)
;


CREATE OR REPLACE TEMP TABLE TPV_MIN_MAX AS
  (SELECT
    CUS_CUST_ID,
    MAX(TPV_MENSUAL_TOTAL) AS MAX_TPV,
    MIN(TPV_MENSUAL_TOTAL) AS MIN_TPV,
  FROM TPV_MENSUAL
  GROUP BY 1 )
;


CREATE OR REPLACE TEMP TABLE TPV_TOTAL_AVG AS
  (SELECT
    T1.CUS_CUST_ID,
    AVG(T1.TPV_MENSUAL_TOTAL) AS AVG_TPV_12M_TOTAL,
    COUNT(*) AS CANT_MESES
  FROM TPV_MENSUAL AS T1 INNER JOIN TPV_MIN_MAX AS T2 
  ON T1.CUS_CUST_ID=T2.CUS_CUST_ID
  WHERE T1.TPV_MENSUAL_TOTAL > T2.MIN_TPV AND
  T1.TPV_MENSUAL_TOTAL < T2.MAX_TPV
  GROUP BY 1 )
;


CREATE OR REPLACE TEMP TABLE BASE_KYC_CARLOANS_02 AS
  (SELECT
    A.*,
    COALESCE(BUREAU.RENDA_NEGATIVA,0) AS RENDA_NEGATIVA,
    COALESCE(BUREAU.RENDA_POSITIVA,0) AS RENDA_POSITIVA,
    COALESCE(BUREAU.RENDA_SERASA,0) AS RENDA_SERASA,
    SAFE_CAST (BUREAU.SCORE_NEGATIVO AS NUMERIC) AS SCORE_NEGATIVO,
    SAFE_CAST (BUREAU.SCORE_POSITIVO_PF AS NUMERIC) AS SCORE_POSITIVO,
    SAFE_CAST (BUREAU.SCORE_SERASA AS NUMERIC) AS SCORE_SERASA,
    COALESCE(TPV_TOTAL_AVG.AVG_TPV_12M_TOTAL,0) AS AVG_TPV_12M_TOTAL,
    COALESCE(TPV_TOTAL_AVG.CANT_MESES,0) AS CANT_MESES,
    COALESCE(SCR.LIMITE_TC_INFERIDO,0) AS LIMITE_TC_INFERIDO,
    COALESCE(SCR.TC_MERCADO,0) AS TC_MERCADO
  FROM BASE_KYC_CARLOANS_01 A
  LEFT JOIN BOAVISTA_NEGATIVO AS BUREAU ON (A.CUS_CUST_ID=BUREAU.CUS_CUST_ID AND A.FECHA_SNAPSHOT=BUREAU.FECHA_SNAPSHOT)
  LEFT JOIN TPV_TOTAL_AVG AS TPV_TOTAL_AVG ON (A.CUS_CUST_ID=TPV_TOTAL_AVG.CUS_CUST_ID)
  LEFT JOIN SCR_FEATURES AS SCR ON (A.CUS_CUST_ID=SCR.CUS_CUST_ID) )
;


/***************************************************************************
  INFO DE TPV DE MERCHANTS
***************************************************************************/ 

CREATE OR REPLACE TEMP TABLE BASE_KYC_CARLOANS_03 AS
  (SELECT
    A.*,
    B.TPV_LC_15D,
    B.TPV_LC_7D,
    B.TPV_LC_M1,
    B.TPV_LC_M2,	
    B.TPV_LC_M3,
    B.TPV_LC_M4,
    B.TPV_LC_M5,
    B.TPV_LC_M6,
    B.TAG_OFERTA,
    B.MONTHLY_TPV_LC
  FROM BASE_KYC_CARLOANS_02 A
  LEFT JOIN `meli-bi-data.SBOX_IT_CREDITS_CREDITSTBL.MC_JARVIS` B ON A.CUS_CUST_ID=B.CUS_CUST_ID_SEL
  )
;


CREATE OR REPLACE TEMP TABLE BASE_KYC_CARLOANS_04 AS
  (SELECT
    A.*,
    CASE WHEN (RENDA_POSITIVA IS NOT NULL AND RENDA_POSITIVA>1) AND
               (RENDA_SERASA IS NULL OR RENDA_SERASA=0 OR RENDA_SERASA>RENDA_POSITIVA) 
               THEN RENDA_POSITIVA
               ELSE RENDA_SERASA 
               END AS RENDA_SERASA_TOPEADA
  FROM BASE_KYC_CARLOANS_03 A
  )
;


/*************************************************************************** 
  INFO B3
***************************************************************************/ 

/* --COMENTADO, no se usa.

CREATE OR REPLACE TEMP TABLE BASE_KYC_CARLOANS_06 AS
  (SELECT
    A.*,
    B.B3_MPV_SCORE
  FROM BASE_KYC_CARLOANS_05 A
  LEFT JOIN `meli-bi-data.WHOWNER.BT_CRD_RSK_SCR_B3_MPV` B ON A.CPF_ID=B.IDENTIFICATION_NUM
  QUALIFY ROW_NUMBER() OVER (PARTITION BY CUS_CUST_ID ORDER BY AUD_INS_DT DESC) = 1 
  )
;
*/

DROP TABLE `meli-bi-data.SBOX_CREDITS_SB.INCOME_DATA_CARLOANS_OLD`;
CREATE TABLE `meli-bi-data.SBOX_CREDITS_SB.INCOME_DATA_CARLOANS_OLD` AS
 (SELECT 
  *
  FROM `meli-bi-data.SBOX_CREDITS_SB.INCOME_DATA_CARLOANS`
 );
  

/***************************************************************************
  ARMO LÓGICA DE INGRESOS
***************************************************************************/ 

DROP TABLE `meli-bi-data.SBOX_CREDITS_SB.INCOME_DATA_CARLOANS`;
CREATE TABLE `meli-bi-data.SBOX_CREDITS_SB.INCOME_DATA_CARLOANS` AS
  (SELECT
    A.*,
    CASE WHEN SCORE_NEGATIVO >= 875 THEN 'A'
         WHEN SCORE_NEGATIVO >= 710 THEN 'B'
         WHEN SCORE_NEGATIVO >= 660 THEN 'C'
         WHEN SCORE_NEGATIVO >= 632 THEN 'D'
         WHEN SCORE_NEGATIVO >= 575 THEN 'E'
         WHEN SCORE_NEGATIVO >= 1 THEN 'NO PRESTABLE'
         ELSE 'ERROR'
         END AS RATING_NEGATIVO,
    CASE WHEN SCORE_POSITIVO >= 650 THEN 'A'
         WHEN SCORE_POSITIVO >= 550 THEN 'B'
         WHEN SCORE_POSITIVO >= 500 THEN 'C'
         WHEN SCORE_POSITIVO >= 450 THEN 'D'
         WHEN SCORE_POSITIVO >= 400 THEN 'E'
         WHEN SCORE_POSITIVO >= 1 THEN 'NO PRESTABLE'
         ELSE 'ERROR'
         END AS RATING,
    CASE WHEN RENDA_SERASA_TOPEADA>0 AND (MONTHLY_TPV_LC/RENDA_SERASA_TOPEADA) - 1 > 0.3 THEN RENDA_SERASA * 1.3
         WHEN RENDA_SERASA_TOPEADA>0 AND (MONTHLY_TPV_LC/RENDA_SERASA_TOPEADA) - 1 > 0 THEN MONTHLY_TPV_LC
         ELSE RENDA_SERASA_TOPEADA END AS RENTA_SERASA,
    CASE WHEN RENDA_POSITIVA>0 AND (MONTHLY_TPV_LC/RENDA_POSITIVA) - 1 > 0.3 THEN RENDA_POSITIVA * 1.3
         WHEN RENDA_POSITIVA>0 AND (MONTHLY_TPV_LC/RENDA_POSITIVA) - 1 > 0 THEN MONTHLY_TPV_LC
         ELSE RENDA_POSITIVA END AS RENTA_POSITIVA,
    CASE WHEN RENDA_NEGATIVA>0 AND (MONTHLY_TPV_LC/RENDA_NEGATIVA) - 1 > 0.3 THEN RENDA_NEGATIVA * 1.3
         WHEN RENDA_NEGATIVA>0 AND (MONTHLY_TPV_LC/RENDA_NEGATIVA) - 1 > 0 THEN MONTHLY_TPV_LC
         ELSE RENDA_NEGATIVA END AS RENTA_NEGATIVA,
    CASE WHEN MONTHLY_TPV_LC > RENDA_SERASA THEN 'INGRESO_MERCHANT'
         ELSE 'INGRESO_ESTIMADO' END AS TIPO_INGRESO,
  FROM BASE_KYC_CARLOANS_04 A
  )
;

